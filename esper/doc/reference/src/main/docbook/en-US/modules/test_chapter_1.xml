<chapter xml:id="test_chapter_1" version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="./" xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns="http://docbook.org/ns/docbook">

    <title>Processing Model</title>

    <sect1 xml:id="test_intro" revision="1">
        <title>Introduction Test</title>
		<indexterm><primary>Chapter 1 test</primary></indexterm>
        
        <para>
			This is a test introduction.
        </para>
			
        <para>
			The text <literal>this is a literal</literal> is a literal. The text <emphasis>this is emphasized</emphasis> is emphasized.
        </para>
	</sect1>
	
    <sect1 xml:id="test_two" revision="1">
        <title>Test Two</title>

		<para>
		  A single-line program listing:
		</para>
        <programlisting><![CDATA[select * from Withdrawal]]></programlisting>

		<para>
		  A two-line program listing:
		</para>
        <programlisting><![CDATA[select * 
from Withdrawal]]></programlisting>
        
		<para>
		  A multi-line program listing:
		</para>
		<programlisting><![CDATA[select account, avg(amount) 
from Withdrawal.win:time(4 sec) 
group by account
having amount > 1000]]></programlisting>

        <para>
			Here is a single-line synopsis:
        </para>
		<synopsis>@<emphasis>annotation_name</emphasis> (<emphasis>attribute_name</emphasis> = <emphasis>attribute_value</emphasis>, [name=value, ...])</synopsis>
		
		<para>
			Here is a multi-line synopsis:
		</para>
		<synopsis>output [after <emphasis>suppression_def</emphasis>] 
  [[all | first | last | snapshot] when <emphasis>trigger_expression</emphasis> 
    [then set <emphasis>variable_name</emphasis> = <emphasis>assign_expression</emphasis> [, <emphasis>variable_name</emphasis> = <emphasis>assign_expression</emphasis> [,...]]]
  [and when terminated 
    [and <emphasis>termination_expression</emphasis>]
    [then set variable_name = assign_expression [, variable_name = assign_expression [,...]]]
  ]</synopsis>

        <para>
			Here is a media object:
        </para>
        
		<mediaobject>
			<imageobject>
				<imagedata fileref="images/refdoc_outputmodel_updatelistener.gif" format="GIF" align="center"/>
			</imageobject>
		</mediaobject>

		<para>
		  A figure with media object:
		</para>
        <figure xml:id="figure_with_media_object">
			<title>Example title for figure</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/refdoc_outputmodel_nowindow.gif" format="GIF" align="center"/>
				</imageobject>
			</mediaobject>
        </figure>

		<para>
			A ordered list:
		</para>
		
		<orderedlist>
			<listitem>
				<para>
					At time <subscript>1</subscript> arrives and enters the batch. 
				</para>
			</listitem>
			<listitem>
				<para>
					At time <subscript>2</subscript> arrives and enters the batch.
				</para>
			</listitem>
		</orderedlist>
		
		<para>
			A itemized list:
		</para>
		
		<itemizedlist spacing="compact">
			<listitem>
				<para>
					Open ranges that contain neither endpoint <literal>(low:high)</literal>
				</para>
			</listitem>
			<listitem>
				<para>
					Closed ranges that contain both endpoints <literal>[low:high]</literal>. The equivalent 'between' keyword also defines a closed range.
				</para>
			</listitem>
		</itemizedlist>

		<para>
			A table:
		</para>

		<table frame="topbot">
			<title>Types of EPL constants</title>
			<tgroup cols="3">
				<colspec colwidth="0.20*"/>
				<colspec colwidth="1*"/>
				<colspec colwidth="0.75*"/>
				<thead>
					<row>
						<entry>Type</entry>
						<entry>Description</entry>
						<entry>Examples</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>string</entry>
						<entry>A single character to an unlimited number of characters. Valid delimiters are the single quote (') or double quote (").</entry>
						<entry><programlisting><![CDATA[select 'volume' as field1,
"sleep" as field2, 
"\u0041" as unicodeA]]></programlisting></entry>
					</row>
					<row>
						<entry>boolean</entry>
						<entry>A boolean value.</entry>
						<entry><programlisting><![CDATA[select true as field1, 
false as field2]]></programlisting></entry>
					</row>
				</tbody>
			</tgroup>				
		</table>

	</sect1>
	
    <sect1 xml:id="test_3_1" revision="1">
        <title>Test 3  - 1</title>
	
		<sect2 xml:id="test_3_1_1" revision="1">
			<title>Test 3 - 1 - 1</title>

			<para>
				A paragraph.
			</para>

			<sect3 xml:id="test_3_1_1_1" revision="1">
				<title>Test 3 - 1 - 1 - 1</title>
	
				<para>
					A paragraph.
				</para>

				<sect4 xml:id="test_3_1_1_1_1" revision="1">
					<title>Test 3 - 1 - 1 - 1 - 1</title>
		
					<para>
						A paragraph.
					</para>
				</sect4>
			</sect3>
		</sect2>
    </sect1>
</chapter>
